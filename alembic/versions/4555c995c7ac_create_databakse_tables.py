"""create databakse tables

Revision ID: 4555c995c7ac
Revises: 
Create Date: 2022-04-18 15:22:45.684065

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4555c995c7ac'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exam',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('Subject', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('user_type', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('mobile', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('mobile'),
    sa.UniqueConstraint('username')
    )
    op.create_table('address',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('address_line1', sa.String(), nullable=False),
    sa.Column('address_line2', sa.String(), nullable=False),
    sa.Column('City', sa.String(), nullable=False),
    sa.Column('State', sa.String(), nullable=False),
    sa.Column('Country', sa.String(), nullable=False),
    sa.Column('pincode', sa.Integer(), nullable=False),
    sa.Column('users_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['users_id'], ['users.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('students',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('dob', sa.DateTime(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('users_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['users_id'], ['users.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teachers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('dob', sa.DateTime(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('users_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['users_id'], ['users.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('attendance',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('total', sa.Integer(), nullable=False),
    sa.Column('remarks', sa.String(), nullable=False),
    sa.Column('Status', sa.String(), nullable=False),
    sa.Column('students_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['students_id'], ['students.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('classroom',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('section', sa.String(), nullable=False),
    sa.Column('students_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['students_id'], ['students.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('students_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['students_id'], ['students.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exam_result',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('marks', sa.Integer(), nullable=False),
    sa.Column('students_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['students_id'], ['students.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parents',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('dob', sa.DateTime(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('users_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['users_id'], ['users.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grade',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('g_class', sa.String(), nullable=False),
    sa.Column('students_id', sa.Integer(), nullable=False),
    sa.Column('exam_result', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['exam_result'], ['exam_result.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['students_id'], ['students.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('grade')
    op.drop_table('parents')
    op.drop_table('exam_result')
    op.drop_table('course')
    op.drop_table('classroom')
    op.drop_table('attendance')
    op.drop_table('teachers')
    op.drop_table('students')
    op.drop_table('address')
    op.drop_table('users')
    op.drop_table('exam')
    # ### end Alembic commands ###
